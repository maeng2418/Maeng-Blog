{"version":3,"file":"component---src-pages-index-tsx-76305b8721c61e8be053.js","mappings":"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","sources":["webpack://blog/./src/constants/meta.ts","webpack://blog/./src/hooks/useCategory.ts","webpack://blog/./src/utils/storage/core.ts","webpack://blog/./src/utils/storage/browser.ts","webpack://blog/./src/utils/storage/sessionStorage.ts","webpack://blog/./src/utils/storage/localStorage.ts","webpack://blog/./src/utils/storage/index.ts","webpack://blog/./src/hooks/useRenderedCount.ts","webpack://blog/./src/hooks/useScrollEvent.ts","webpack://blog/./src/types/Literal.ts","webpack://blog/./src/pages/index.tsx","webpack://blog/./src/utils/event-manager.ts"],"sourcesContent":["export const HOME_TITLE = 'Home'\nexport const PORTFOLIO_TITLE = 'Portfolio'\n","import { useEffect, useState, useCallback } from 'react'\nimport qs from 'qs'\nimport { Category } from '@/types/post'\n\nconst useCategory = () => {\n  const [category, setCategory] = useState<Category>('ALL')\n\n  const selectCategory = useCallback((selectedCategory: Category) => {\n    setCategory(selectedCategory)\n    window.history.pushState(\n      { selectedCategory },\n      '',\n      `${window.location.pathname}?${qs.stringify({ category: selectedCategory })}`,\n    )\n  }, [])\n\n  const changeCategory = useCallback(() => {\n    const { category: qsCategory = 'ALL' } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n    })\n    const target = qsCategory as Category\n\n    setCategory(target)\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('popstate', changeCategory)\n\n    return () => {\n      window.removeEventListener('popstate', changeCategory)\n    }\n  }, [])\n\n  useEffect(() => {\n    changeCategory()\n  }, [])\n\n  return [category, selectCategory] as const\n}\n\nexport default useCategory\n","const isEmpty = (storage: Storage) => {\n  return !storage || Object.keys(storage).length === 0\n}\n\nexport const getValueFrom = (storage: Storage, key: string) => {\n  if (isEmpty(storage)) {\n    return null\n  }\n  const rawData = storage.getItem(key)\n\n  if (!rawData) {\n    return null\n  }\n  return JSON.parse(rawData)\n}\n\nexport const setValueTo = (storage: Storage, key: string, data: any) => {\n  if (isEmpty(storage)) {\n    return null\n  }\n  return storage.setItem(key, JSON.stringify(data))\n}\n","export const localStorage = typeof window !== `undefined` ? window.localStorage : undefined\nexport const sessionStorage = typeof window !== `undefined` ? window.sessionStorage : undefined\n","import { partial } from 'maeng-utils/utils'\n\nimport { setValueTo, getValueFrom } from './core'\nimport { sessionStorage } from './browser'\n\nexport const setValueToSessionStorage = partial(setValueTo, sessionStorage!)\nexport const getValueFromSessionStorage = partial(getValueFrom, sessionStorage!)\n","import { partial } from 'maeng-utils/utils'\n\nimport { setValueTo, getValueFrom } from './core'\nimport { localStorage } from './browser'\n\nexport const setValueToLocalStorage = partial(setValueTo, localStorage!)\nexport const getValueFromLocalStorage = partial(getValueFrom, localStorage!)\n","import { getValueFromLocalStorage, setValueToLocalStorage } from './localStorage'\nimport { getValueFromSessionStorage, setValueToSessionStorage } from './sessionStorage'\n\nconst SESSION_STORAGE_KEY = '__maeng_blog_session_storage_key__'\nconst LOCAL_STORAGE_KEY = '__maeng_blog_local_storage_key__'\n\nexport const getCount = (defaultValue: number) => {\n  return getValueFromSessionStorage(`${SESSION_STORAGE_KEY}/count`) || defaultValue\n}\n\nexport const setCount = (val: number) => {\n  return setValueToSessionStorage(`${SESSION_STORAGE_KEY}/count`, val)\n}\n\nexport const getData = () => {\n  return getValueFromLocalStorage(LOCAL_STORAGE_KEY)\n}\n\nexport const setData = (val: string) => {\n  return setValueToLocalStorage(LOCAL_STORAGE_KEY, val)\n}\n\nexport const getTheme = (defaultValue: string) => {\n  return getValueFromLocalStorage(`${LOCAL_STORAGE_KEY}/theme`) || defaultValue\n}\n\nexport const setTheme = (val: string) => {\n  return setValueToLocalStorage(`${LOCAL_STORAGE_KEY}/theme`, val)\n}\n","import { useState, useEffect, useRef, useCallback } from 'react'\nimport * as Storage from '@/utils/storage'\n\nconst useRenderedCount = () => {\n  const initialCount = Storage.getCount(1)\n  const [count, setCount] = useState<number>(initialCount)\n  const countRef = useRef(count)\n  const increaseCount = useCallback(() => setCount((prev) => prev + 1), [])\n\n  useEffect(() => {\n    countRef.current = count\n    Storage.setCount(count)\n  }, [count])\n\n  return [count, countRef, increaseCount] as const\n}\n\nexport default useRenderedCount\n","import { useEffect } from 'react'\n\nconst useScrollEvent = (onScroll: (e: Event) => void) => {\n  useEffect(() => {\n    window.addEventListener(`scroll`, onScroll, { passive: false })\n    return () => {\n      window.removeEventListener(`scroll`, onScroll)\n    }\n  }, [])\n}\n\nexport default useScrollEvent\n","export const CategoryConst = [\n  'ALL',\n  'Development',\n  'Git',\n  'Javascript',\n  'NodeJS',\n  'React',\n  'Typescript',\n  'Web',\n] as const\n\nexport type Category = (typeof CategoryConst)[number]\n\nexport const ThemeConst = ['dark', 'light'] as const\nexport type Theme = (typeof ThemeConst)[number]\n","import { graphql, PageProps } from 'gatsby'\nimport { useCallback, useMemo } from 'react'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { Head, Category, PostList, Banner } from '@/components'\nimport {\n  BASE_LINE,\n  HOME_TITLE,\n  INTERSECTION_OBSERVER_ROOT_MARGIN,\n  INTERSECTION_OBSERVER_THRESHOLD,\n  ROOT_ID,\n} from '@/constants'\nimport * as Dom from '@/utils/dom'\nimport { toFit } from '@/utils/event-manager'\nimport useCategory from '@/hooks/useCategory'\nimport useIntersectionObserver from '@/hooks/useIntersectionObserver'\nimport useRenderedCount from '@/hooks/useRenderedCount'\nimport useScrollEvent from '@/hooks/useScrollEvent'\nimport { addClass, getElement } from '@/utils/dom'\nimport { CategoryConst } from '@/types/Literal'\n\ninterface IndexPageDataProps {\n  allMarkdownRemark: {\n    edges: [\n      {\n        node: {\n          frontmatter: {\n            date: string\n            title: string\n            category: string\n            draft: boolean\n            thumbnail?: {\n              childImageSharp: {\n                gatsbyImageData: IGatsbyImageData\n              }\n            }\n          }\n          excerpt: string\n          fields: {\n            slug: string\n          }\n        }\n      },\n    ]\n  }\n  site: {\n    siteMetadata: {\n      title: string\n      keywords: string[]\n      configs: {\n        countOfInitialPost: number\n      }\n    }\n  }\n}\n\nconst IndexPage = ({ data }: PageProps<IndexPageDataProps>) => {\n  const { siteMetadata } = data.site\n  const { countOfInitialPost } = siteMetadata.configs\n  const posts = data.allMarkdownRemark.edges\n  const [count, countRef, increaseCount] = useRenderedCount()\n  const [category, selectCategory] = useCategory()\n\n  const getDistance = useCallback((currentPos: number) => {\n    return Dom.getDocumentHeight() - currentPos\n  }, [])\n\n  useIntersectionObserver(\n    (entries: IntersectionObserverEntry[]) => {\n      return entries\n        .filter(({ isIntersecting }) => isIntersecting)\n        .forEach(({ target }) => addClass(target as HTMLElement, 'observed-shown'))\n    },\n    {\n      root: getElement(ROOT_ID),\n      rootMargin: INTERSECTION_OBSERVER_ROOT_MARGIN,\n      threshold: INTERSECTION_OBSERVER_THRESHOLD,\n    },\n  )\n\n  useScrollEvent(() => {\n    const currentPos = window.scrollY + window.innerHeight\n    const isTriggerPos = () => getDistance(currentPos) < BASE_LINE\n    const doesNeedMore = () => posts.length > countRef.current * countOfInitialPost\n\n    return toFit(increaseCount, {\n      dismissCondition: () => !isTriggerPos(),\n      triggerCondition: () => isTriggerPos() && doesNeedMore(),\n    })()\n  })\n\n  const refinedPosts = useMemo(\n    () =>\n      posts\n        .filter(({ node }) => category === 'ALL' || node.frontmatter.category === category)\n        .slice(0, count * countOfInitialPost)\n        .map(({ node }) => ({\n          id: node.frontmatter.title,\n          title: node.frontmatter.title,\n          thumbnail: node.frontmatter.thumbnail?.childImageSharp.gatsbyImageData,\n          excerpt: node.excerpt,\n          slug: node.fields.slug,\n        })),\n    [category, count, countOfInitialPost, posts],\n  )\n\n  return (\n    <main>\n      {/* 배너 */}\n      <Banner />\n      <Category value={category} items={[...CategoryConst]} onClick={selectCategory} />\n      <Head title={HOME_TITLE} keywords={siteMetadata.keywords} />\n      <PostList posts={refinedPosts} />\n    </main>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        configs {\n          countOfInitialPost\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { ne: null }, draft: { eq: false } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 280, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n            category\n            draft\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","export const toFit = (\n  cb: Function,\n  { dismissCondition = () => false, triggerCondition = () => true },\n) => {\n  if (!cb) {\n    throw Error('Invalid required arguments')\n  }\n\n  let tick = false\n\n  return () => {\n    if (tick) {\n      return null\n    }\n\n    tick = true\n    return requestAnimationFrame(() => {\n      if (dismissCondition()) {\n        tick = false\n        return null\n      }\n\n      if (triggerCondition()) {\n        tick = false\n        return cb()\n      }\n      return null\n    })\n  }\n}\n"],"names":["HOME_TITLE","PORTFOLIO_TITLE","useCategory","category","setCategory","useState","selectCategory","useCallback","selectedCategory","window","history","pushState","location","pathname","qs","changeCategory","qsCategory","search","ignoreQueryPrefix","useEffect","addEventListener","removeEventListener","isEmpty","storage","Object","keys","length","getValueFrom","key","rawData","getItem","JSON","parse","setValueTo","data","setItem","stringify","localStorage","undefined","sessionStorage","setValueToSessionStorage","partial","getValueFromSessionStorage","SESSION_STORAGE_KEY","useRenderedCount","initialCount","defaultValue","count","setCount","countRef","useRef","increaseCount","prev","current","onScroll","passive","CategoryConst","_ref","siteMetadata","site","countOfInitialPost","configs","posts","allMarkdownRemark","edges","getDistance","currentPos","Dom","useIntersectionObserver","entries","filter","_ref2","isIntersecting","forEach","_ref3","target","addClass","root","getElement","ROOT_ID","rootMargin","INTERSECTION_OBSERVER_ROOT_MARGIN","threshold","INTERSECTION_OBSERVER_THRESHOLD","useScrollEvent","scrollY","innerHeight","isTriggerPos","BASE_LINE","toFit","cb","dismissCondition","triggerCondition","Error","tick","requestAnimationFrame","refinedPosts","useMemo","_ref4","node","frontmatter","slice","map","_ref5","_node$frontmatter$thu","id","title","thumbnail","childImageSharp","gatsbyImageData","excerpt","slug","fields","_jsxs","children","_jsx","Banner","Category","value","items","_toConsumableArray","onClick","Head","keywords","PostList"],"sourceRoot":""}